{"version":3,"sources":["pages/home/index.js","pages/team/index.js","App.js","serviceWorker.js","index.js","pages/home/index.module.scss","pages/team/index.module.scss"],"names":["Home","props","onTextChanged","e","value","target","suggestions","length","regex","RegExp","items","sort","filter","v","test","setState","text","onSubmit","state","history","push","window","location","reload","this","className","style","mainsuggestionContainer","map","item","suggestionItem","onClick","suggestionSelected","console","log","mainContainer","homeContainer","searchContainer","subTitle","mainTitle","type","placeholder","searchInput","onChange","renderSuggestions","React","Component","Team","App","basename","path","exact","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"kRAsFeA,E,YAlFb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAQRC,cAAgB,SAAAC,GACd,IAAMC,EAAQD,EAAEE,OAAOD,MACnBE,EAAc,GAClB,GAAIF,EAAMG,OAAS,EAAG,CACpB,IAAMC,EAAQ,IAAIC,OAAJ,UAAcL,GAAS,KACrCE,EAAc,EAAKI,MAAMC,OAAOC,QAAO,SAAAC,GAAC,OAAIL,EAAMM,KAAKD,MAEzD,EAAKE,UAAS,iBAAO,CAAET,cAAaU,KAAMZ,OAhBzB,EA+CnBa,SAAW,WACe,SAApB,EAAKC,MAAMF,KACb,EAAKf,MAAMkB,QAAQC,KAAK,SAExBC,OAAOC,SAASC,UAjDlB,EAAKb,MAAQ,CAAC,UAAW,WAAY,KAAM,gBAAiB,QAC5D,EAAKQ,MAAQ,CACXZ,YAAa,GACbU,KAAM,IALS,E,gFAmBAZ,GACjBoB,KAAKT,UAAS,iBAAO,CACnBC,KAAMZ,EACNE,YAAa,S,0CAII,IAAD,OACVA,EAAgBkB,KAAKN,MAArBZ,YACR,OAA2B,IAAvBA,EAAYC,OACP,KAGP,4BACE,yBAAKkB,UAAWC,IAAMC,yBACnBrB,EAAYsB,KAAI,SAAAC,GAAI,OACnB,wBACEJ,UAAWC,IAAMI,eACjBC,QAAS,kBAAM,EAAKC,mBAAmBH,KAEtCA,U,+BAgBH,IACAb,EAASQ,KAAKN,MAAdF,KAGR,OAFAiB,QAAQC,IAAIlB,GACZiB,QAAQC,IAAIV,KAAKN,MAAMZ,aAErB,yBAAKmB,UAAWC,IAAMS,eACpB,yBAAKV,UAAWC,IAAMU,eACpB,yBAAKX,UAAWC,IAAMW,iBACpB,wBAAIZ,UAAWC,IAAMY,UAArB,2BACA,wBAAIb,UAAWC,IAAMa,WAArB,iBACA,0BAAMtB,SAAUO,KAAKP,UACnB,2BACEuB,KAAK,OACLC,YAAY,SACZhB,UAAWC,IAAMgB,YACjBtC,MAAOY,EACP2B,SAAUnB,KAAKtB,gBAEhBsB,KAAKoB,4B,GA1EDC,IAAMC,W,gBCeVC,E,iLAbX,OACE,yBAAKtB,UAAWC,IAAMS,eACpB,yBAAKV,UAAWC,IAAMU,eACpB,yBAAKX,UAAWC,IAAMW,iBACpB,wBAAIZ,UAAWC,IAAMY,UAArB,qBACA,wBAAIb,UAAWC,IAAMa,WAArB,e,GAPOM,IAAMC,WCeVE,MAbf,WACE,OACE,6BACE,kBAAC,IAAD,CAAQC,SAAS,KACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWpD,IACjC,kBAAC,IAAD,CAAOkD,KAAK,QAAQE,UAAWL,QCCrBM,QACW,cAA7BhC,OAAOC,SAASgC,UAEe,UAA7BjC,OAAOC,SAASgC,UAEhBjC,OAAOC,SAASgC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlC,QAAQkC,MAAMA,EAAMC,a,kBExI5BC,EAAOC,QAAU,CAAC,UAAY,wBAAwB,SAAW,uBAAuB,cAAgB,4BAA4B,cAAgB,4BAA4B,gBAAkB,8BAA8B,YAAc,0BAA0B,wBAA0B,sCAAsC,eAAiB,+B,kBCAzVD,EAAOC,QAAU,CAAC,cAAgB,4BAA4B,UAAY,wBAAwB,SAAW,uBAAuB,cAAgB,4BAA4B,gBAAkB,iC","file":"static/js/main.38757d72.chunk.js","sourcesContent":["import React from \"react\";\nimport style from \"./index.module.scss\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.items = [\"buttons\", \"typeface\", \"ui\", \"accessibility\", \"team\"];\n    this.state = {\n      suggestions: [],\n      text: \"\"\n    };\n  }\n\n  onTextChanged = e => {\n    const value = e.target.value;\n    let suggestions = [];\n    if (value.length > 0) {\n      const regex = new RegExp(`${value}`, \"i\");\n      suggestions = this.items.sort().filter(v => regex.test(v));\n    }\n    this.setState(() => ({ suggestions, text: value }));\n  };\n\n  suggestionSelected(value) {\n    this.setState(() => ({\n      text: value,\n      suggestions: []\n    }));\n  }\n\n  renderSuggestions() {\n    const { suggestions } = this.state;\n    if (suggestions.length === 0) {\n      return null;\n    }\n    return (\n      <ul>\n        <div className={style.mainsuggestionContainer}>\n          {suggestions.map(item => (\n            <li\n              className={style.suggestionItem}\n              onClick={() => this.suggestionSelected(item)}\n            >\n              {item}\n            </li>\n          ))}\n        </div>\n      </ul>\n    );\n  }\n\n  onSubmit = () => {\n    if (this.state.text === \"team\") {\n      this.props.history.push(\"/team\");\n    } else {\n      window.location.reload();\n    }\n  };\n\n  render() {\n    const { text } = this.state;\n    console.log(text);\n    console.log(this.state.suggestions);\n    return (\n      <div className={style.mainContainer}>\n        <div className={style.homeContainer}>\n          <div className={style.searchContainer}>\n            <h2 className={style.subTitle}>The envisioning justice</h2>\n            <h1 className={style.mainTitle}>Design System</h1>\n            <form onSubmit={this.onSubmit}>\n              <input\n                type=\"text\"\n                placeholder=\"search\"\n                className={style.searchInput}\n                value={text}\n                onChange={this.onTextChanged}\n              ></input>\n              {this.renderSuggestions()}\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport style from \"./index.module.scss\";\n\nclass Team extends React.Component {\n  render() {\n    return (\n      <div className={style.mainContainer}>\n        <div className={style.homeContainer}>\n          <div className={style.searchContainer}>\n            <h2 className={style.subTitle}>The design system</h2>\n            <h1 className={style.mainTitle}>Team</h1>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Team;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/home/index.js\";\nimport Team from \"./pages/team/index.js\";\n\nfunction App() {\n  return (\n    <div>\n      <Router basename=\"/\">\n        <Switch>\n          <Route path=\"/\" exact component={Home}></Route>\n          <Route path=\"/team\" component={Team}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTitle\":\"home_mainTitle__1WaVO\",\"subTitle\":\"home_subTitle__3hNBi\",\"mainContainer\":\"home_mainContainer__2bxUl\",\"homeContainer\":\"home_homeContainer__2SAbE\",\"searchContainer\":\"home_searchContainer__1qf0v\",\"searchInput\":\"home_searchInput__2zW12\",\"mainsuggestionContainer\":\"home_mainsuggestionContainer__1uVQs\",\"suggestionItem\":\"home_suggestionItem__2xf8h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"team_mainContainer__1nL9T\",\"mainTitle\":\"team_mainTitle__Cf6WK\",\"subTitle\":\"team_subTitle__3Xdz0\",\"homeContainer\":\"team_homeContainer__1sdHA\",\"searchContainer\":\"team_searchContainer__1qqkZ\"};"],"sourceRoot":""}